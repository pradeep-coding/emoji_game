{"version":3,"sources":["components/NavBar/index.js","components/EmojiCard/index.js","components/WinOrLoseCard/index.js","components/EmojiGame/index.js","App.js","index.js"],"names":["NavBar","renderScores","props","score","progress","topScore","className","src","alt","this","Component","EmojiCard","emojiDetails","onClickEmoji","id","emojiName","emojiUrl","onClick","WinOrLoseCard","onClickPlayAgain","imageUrl","gameStatus","scoreLabel","type","EmojiGame","state","selectedEmojisList","shuffledEmojisList","emojisList","sort","Math","random","includes","setState","prevState","length","newTopScore","renderScoreCard","renderEmojisList","updatedEmojis","map","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f80449d4.chunk.js","sourcesContent":["import {Component} from 'react'\nimport './index.css'\n\nclass NavBar extends Component {\n  renderScores = () => {\n    const {score, progress, topScore} = this.props\n\n    if (!progress) {\n      return null\n    }\n    return (\n      <div className=\"scores-container\">\n        <p className=\"score\">Score: {score}</p>\n        <p className=\"score\">Top Score: {topScore}</p>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <nav className=\"navbar\">\n        <div className=\"title-with-score-container\">\n          <div className=\"logo-container\">\n            <img\n              src=\"https://assets.ccbp.in/frontend/react-js/game-logo-img.png\"\n              alt=\"game logo\"\n              className=\"game-logo\"\n            />\n            <h1 className=\"game-name\">Emoji Game</h1>\n          </div>\n          {this.renderScores()}\n        </div>\n      </nav>\n    )\n  }\n}\n\nexport default NavBar\n","import './index.css'\n\nconst EmojiCard = props => {\n  const {emojiDetails, onClickEmoji} = props\n  const {id, emojiName, emojiUrl} = emojiDetails\n\n  const onSelectEmoji = () => {\n    onClickEmoji(id)\n  }\n\n  return (\n    <li className=\"emoji-card\" onClick={onSelectEmoji}>\n      <img src={emojiUrl} alt={emojiName} className=\"emoji-icon\" />\n    </li>\n  )\n}\n\nexport default EmojiCard\n","import './index.css'\n\nconst LOSE_IMAGE = 'https://assets.ccbp.in/frontend/react-js/lose-game-img.png'\nconst WON_IMAGE = 'https://assets.ccbp.in/frontend/react-js/won-game-img.png'\n\nconst WinOrLoseCard = props => {\n  const {score, onClickPlayAgain} = props\n\n  const imageUrl = score > 11 ? WON_IMAGE : LOSE_IMAGE\n  const gameStatus = score > 11 ? 'You Won' : 'You Lose'\n  const scoreLabel = score > 11 ? 'Best Score' : 'Score'\n\n  return (\n    <div className=\"result\">\n      <div className=\"game-result\">\n        <h1 className=\"game-status\">{gameStatus}</h1>\n        <p className=\"score-heading\">{scoreLabel}</p>\n        <p className=\"final-score\">{score}/12</p>\n        <button\n          type=\"button\"\n          className=\"play-again-button\"\n          onClick={onClickPlayAgain}\n        >\n          Play Again\n        </button>\n      </div>\n      <div className=\"image-section\">\n        <img src={imageUrl} alt=\"win or lose\" className=\"win-or-lose-image\" />\n      </div>\n    </div>\n  )\n}\n\nexport default WinOrLoseCard\n","import {Component} from 'react'\nimport NavBar from '../NavBar'\nimport EmojiCard from '../EmojiCard'\nimport WinOrLoseCard from '../WinOrLoseCard'\nimport './index.css'\n\n// Use the below function in the EmojiGame Component to shuffle the emojisList every time when an emoji is clicked.\n\nclass EmojiGame extends Component {\n  state = {\n    score: 0,\n    topScore: 0,\n    selectedEmojisList: [],\n    progress: true,\n  }\n\n  shuffledEmojisList = () => {\n    const {emojisList} = this.props\n    return emojisList.sort(() => Math.random() - 0.5)\n  }\n\n  onClickEmoji = id => {\n    const {selectedEmojisList} = this.state\n    const {emojisList} = this.props\n    const isEmojiPresent = selectedEmojisList.includes(id)\n    if (isEmojiPresent) {\n      this.setState(prevState => ({\n        selectedEmojisList: [],\n        progress: !prevState.progress,\n      }))\n    } else {\n      if (emojisList.length - 1 === selectedEmojisList.length) {\n        this.setState(prevState => ({\n          selectedEmojisList: [],\n          progress: !prevState.progress,\n        }))\n      }\n      this.setState(prevState => ({\n        selectedEmojisList: [...prevState.selectedEmojisList, id],\n        score: prevState.score + 1,\n      }))\n    }\n  }\n\n  onClickPlayAgain = () => {\n    const {score, topScore} = this.state\n    const newTopScore = score > topScore ? score : topScore\n    this.setState(prevState => ({\n      score: 0,\n      topScore: newTopScore,\n      progress: !prevState.progress,\n      selectedEmojisList: [],\n    }))\n  }\n\n  renderScoreCard = () => {\n    const {progress, score} = this.state\n    return (\n      <WinOrLoseCard\n        progress={progress}\n        onClickPlayAgain={this.onClickPlayAgain}\n        score={score}\n      />\n    )\n  }\n\n  renderEmojisList = () => {\n    const updatedEmojis = this.shuffledEmojisList()\n\n    return (\n      <ul className=\"emojis\">\n        {updatedEmojis.map(emojiDetails => (\n          <EmojiCard\n            emojiDetails={emojiDetails}\n            key={emojiDetails.id}\n            onClickEmoji={this.onClickEmoji}\n          />\n        ))}\n      </ul>\n    )\n  }\n\n  render() {\n    const {score, topScore, progress} = this.state\n\n    return (\n      <div className=\"emoji-game-bg-container\">\n        <NavBar score={score} topScore={topScore} progress={progress} />\n        <div className=\"emoji-game-body\">\n          {!progress ? this.renderScoreCard() : this.renderEmojisList()}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default EmojiGame\n","import EmojiGame from './components/EmojiGame'\n\nimport './App.css'\n\nexport const emojisList = [\n  {\n    id: 0,\n    emojiName: 'Face with stuck out tongue',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-stuck-out-tongue-img.png',\n  },\n  {\n    id: 1,\n    emojiName: 'Face with head bandage',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-head-bandage-img.png',\n  },\n  {\n    id: 2,\n    emojiName: 'Face with hugs',\n    emojiUrl: 'https://assets.ccbp.in/frontend/react-js/face-with-hugs-img.png',\n  },\n  {\n    id: 3,\n    emojiName: 'Face with laughing',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-laughing-img.png',\n  },\n  {\n    id: 4,\n    emojiName: 'Laughing face with hand in front of mouth',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-laughing-with-hand-infront-mouth-img.png',\n  },\n  {\n    id: 5,\n    emojiName: 'Face with mask',\n    emojiUrl: 'https://assets.ccbp.in/frontend/react-js/face-with-mask-img.png',\n  },\n  {\n    id: 6,\n    emojiName: 'Face with silence',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-silence-img.png',\n  },\n  {\n    id: 7,\n    emojiName: 'Face with stuck out tongue and winked eye',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-stuck-out-tongue-and-winking-eye-img.png',\n  },\n  {\n    id: 8,\n    emojiName: 'Grinning face with sweat',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/grinning-face-with-sweat-img.png',\n  },\n  {\n    id: 9,\n    emojiName: 'Smiling face with heart eyes',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/smiling-face-with-heart-eyes-img.png',\n  },\n  {\n    id: 10,\n    emojiName: 'Grinning face',\n    emojiUrl: 'https://assets.ccbp.in/frontend/react-js/grinning-face-img.png',\n  },\n  {\n    id: 11,\n    emojiName: 'Smiling face with star eyes',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/smiling-face-with-star-eyes-img.png',\n  },\n]\n\nconst App = () => <EmojiGame emojisList={emojisList} />\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}